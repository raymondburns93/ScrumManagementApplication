//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrumManagementApp.Client.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO CreateUser(ScrumManagementApp.Common.DTOs.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> CreateUserAsync(ScrumManagementApp.Common.DTOs.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO GetUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> GetUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO GetUserByEmail(string pEmail, bool pReturnProductOwner, bool pReturnScrumMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> GetUserByEmailAsync(string pEmail, bool pReturnProductOwner, bool pReturnScrumMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UsernameExists", ReplyAction="http://tempuri.org/IUserService/UsernameExistsResponse")]
        bool UsernameExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UsernameExists", ReplyAction="http://tempuri.org/IUserService/UsernameExistsResponse")]
        System.Threading.Tasks.Task<bool> UsernameExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateLoginDetails", ReplyAction="http://tempuri.org/IUserService/ValidateLoginDetailsResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO ValidateLoginDetails(ScrumManagementApp.Common.DTOs.CondensedUserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateLoginDetails", ReplyAction="http://tempuri.org/IUserService/ValidateLoginDetailsResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> ValidateLoginDetailsAsync(ScrumManagementApp.Common.DTOs.CondensedUserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByProjectId", ReplyAction="http://tempuri.org/IUserService/GetUsersByProjectIdResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO[] GetUsersByProjectId(int pProjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByProjectId", ReplyAction="http://tempuri.org/IUserService/GetUsersByProjectIdResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> GetUsersByProjectIdAsync(int pProjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUsersBySkillset", ReplyAction="http://tempuri.org/IUserService/FindUsersBySkillsetResponse")]
        ScrumManagementApp.Common.DTOs.UserDTO[] FindUsersBySkillset(string Skillset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUsersBySkillset", ReplyAction="http://tempuri.org/IUserService/FindUsersBySkillsetResponse")]
        System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> FindUsersBySkillsetAsync(string Skillset);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ScrumManagementApp.Client.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ScrumManagementApp.Client.UserService.IUserService>, ScrumManagementApp.Client.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO CreateUser(ScrumManagementApp.Common.DTOs.UserDTO user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> CreateUserAsync(ScrumManagementApp.Common.DTOs.UserDTO user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO GetUser(int userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> GetUserAsync(int userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO GetUserByEmail(string pEmail, bool pReturnProductOwner, bool pReturnScrumMaster) {
            return base.Channel.GetUserByEmail(pEmail, pReturnProductOwner, pReturnScrumMaster);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> GetUserByEmailAsync(string pEmail, bool pReturnProductOwner, bool pReturnScrumMaster) {
            return base.Channel.GetUserByEmailAsync(pEmail, pReturnProductOwner, pReturnScrumMaster);
        }
        
        public bool UsernameExists(string username) {
            return base.Channel.UsernameExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> UsernameExistsAsync(string username) {
            return base.Channel.UsernameExistsAsync(username);
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO ValidateLoginDetails(ScrumManagementApp.Common.DTOs.CondensedUserDTO user) {
            return base.Channel.ValidateLoginDetails(user);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO> ValidateLoginDetailsAsync(ScrumManagementApp.Common.DTOs.CondensedUserDTO user) {
            return base.Channel.ValidateLoginDetailsAsync(user);
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO[] GetUsersByProjectId(int pProjectId) {
            return base.Channel.GetUsersByProjectId(pProjectId);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> GetUsersByProjectIdAsync(int pProjectId) {
            return base.Channel.GetUsersByProjectIdAsync(pProjectId);
        }
        
        public ScrumManagementApp.Common.DTOs.UserDTO[] FindUsersBySkillset(string Skillset) {
            return base.Channel.FindUsersBySkillset(Skillset);
        }
        
        public System.Threading.Tasks.Task<ScrumManagementApp.Common.DTOs.UserDTO[]> FindUsersBySkillsetAsync(string Skillset) {
            return base.Channel.FindUsersBySkillsetAsync(Skillset);
        }
    }
}
